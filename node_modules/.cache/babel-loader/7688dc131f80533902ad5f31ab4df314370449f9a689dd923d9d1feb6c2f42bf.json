{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rapid Computer's\\\\my-crud-app\\\\src\\\\pages\\\\Edit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Edit() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [title, setTitle] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/posts/${id}`).then(res => res.json()).then(data => setTitle(data.title)).catch(err => console.error(err));\n  }, [id]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id,\n        title,\n        body: '',\n        userId: 1\n      })\n    }).then(() => navigate('/')).catch(err => console.error(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Edit, \"KdaWPZOwyZG5brKPfOACuJ9gv54=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Edit;\nexport default Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","Edit","_s","id","title","setTitle","navigate","fetch","then","res","json","data","catch","err","console","error","handleSubmit","e","preventDefault","method","headers","body","JSON","stringify","userId","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Rapid Computer's/my-crud-app/src/pages/Edit.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nfunction Edit() {\r\n  const { id } = useParams();\r\n  const [title, setTitle] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch(`https://jsonplaceholder.typicode.com/posts/${id}`)\r\n      .then(res => res.json())\r\n      .then(data => setTitle(data.title))\r\n      .catch(err => console.error(err));\r\n  }, [id]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ id, title, body: '', userId: 1 }),\r\n    })\r\n      .then(() => navigate('/'))\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Edit Post</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={title}\r\n        onChange={e => setTitle(e.target.value)}\r\n        required\r\n      />\r\n      <button type=\"submit\">Update Post</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Edit;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMW,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,8CAA8CJ,EAAE,EAAE,CAAC,CACtDK,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIN,QAAQ,CAACM,IAAI,CAACP,KAAK,CAAC,CAAC,CAClCQ,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC,EAAE,CAACV,EAAE,CAAC,CAAC;EAER,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElBX,KAAK,CAAC,8CAA8CJ,EAAE,EAAE,EAAE;MACxDgB,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEpB,EAAE;QAAEC,KAAK;QAAEiB,IAAI,EAAE,EAAE;QAAEG,MAAM,EAAE;MAAE,CAAC;IACzD,CAAC,CAAC,CACChB,IAAI,CAAC,MAAMF,QAAQ,CAAC,GAAG,CAAC,CAAC,CACzBM,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC;EAED,oBACEb,OAAA;IAAMyB,QAAQ,EAAET,YAAa;IAAAU,QAAA,gBAC3B1B,OAAA;MAAA0B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB9B,OAAA;MACE+B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAE5B,KAAM;MACb6B,QAAQ,EAAEhB,CAAC,IAAIZ,QAAQ,CAACY,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;MACxCG,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF9B,OAAA;MAAQ+B,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEX;AAAC5B,EAAA,CApCQD,IAAI;EAAA,QACIJ,SAAS,EAEPC,WAAW;AAAA;AAAAsC,EAAA,GAHrBnC,IAAI;AAsCb,eAAeA,IAAI;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}